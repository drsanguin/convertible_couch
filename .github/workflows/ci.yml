name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  ci:
    name: CI
    runs-on: windows-latest

    steps:
    - name: Checkout repository ‚¨áÔ∏è
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Check coding style üìù
      run: cargo fmt --check --all

    - name: Download Windows SDK 8.1 Installer ‚¨áÔ∏è
      run: Invoke-WebRequest -Uri "https://go.microsoft.com/fwlink/p/?LinkId=323507" -OutFile "sdksetup.exe"

    - name: Install Windows SDK 8.1 üß∞
      run: |
        $ProgressPreference = 'SilentlyContinue'

        $process = Start-Process -Wait sdksetup.exe `
          -ArgumentList "/q", "/norestart", "/features", "OptionId.WindowsDesktopSoftwareDevelopmentKit", "OptionId.NetFxSoftwareDevelopmentKit", "/log", "windows_sdk_installation.log" `
          -PassThru

        if ($process.ExitCode -ne 0) {
          throw "Installation of Windows SDK 8.1 failed with exit code $($process.ExitCode)"
        }

    - name: Download Visual Studio 2017 Build Tools ‚¨áÔ∏è
      run: Invoke-WebRequest -Uri https://aka.ms/vs/15/release/vs_buildtools.exe -OutFile vs_buildtools.exe

    - name: Install Visual Studio 2017 Build Tools üß∞
      run: |
        $ProgressPreference = 'SilentlyContinue'
        $process = Start-Process .\vs_buildtools.exe `
          -ArgumentList '--quiet', '--wait', '--norestart', `
            '--add', 'Microsoft.VisualStudio.Workload.VCTools' `
          -NoNewWindow `
          -Wait `
          -RedirectStandardError vs_buildtools_error.log -RedirectStandardOutput vs_buildtools.log `
          -PassThru
        if ($process.ExitCode -ne 0) {
          throw "Installation of Visual Studio 2017 Build Tools failed with exit code $($process.ExitCode)"
        }

    - name: Archive Environment Installation Logs ‚¨ÜÔ∏è
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: environment_installation_logs
        path: |
          windows_sdk_installation.log
          vs_buildtools_error.log
          vs_buildtools.log

    - name: Setup MSBuild path üß∞
      uses: microsoft/setup-msbuild@v2

    - name: Compile üèóÔ∏è
      run: cargo build --all-targets --verbose

    - name: Run Tests üß™
      run: cargo test --verbose -- --nocapture
      
    - name: Install cargo-mutants üß∞
      run: cargo install --locked cargo-mutants

    - name: Run Mutants Tests üßü‚Äç‚ôÇÔ∏è
      id: run_mutants_tests
      run: cargo mutants --all-features --no-shuffle --in-place --test-workspace=true

    - name: Archive results ‚¨ÜÔ∏è
      uses: actions/upload-artifact@v4
      if: steps.run_mutants_tests.outcome == 'failure'
      with:
        name: mutation-report
        path: mutants.out
        
    - name: Run Benchmarks ‚è±Ô∏è
      run: cargo test --benches

    - name: Install nightly toolchain üß∞
      run: rustup update nightly

    - name: Set the nightly toolchain as default üß∞
      run: rustup default nightly

    - name: Install llvm-tools üß∞
      run: rustup component add llvm-tools

    - name: Install grcov üß∞
      run: cargo install grcov

    - name: Generate LLVM Coverage üìä
      env:
        CARGO_INCREMENTAL: 0
        RUSTFLAGS: -Cinstrument-coverage
        LLVM_PROFILE_FILE: convertible_couch-%p-%m.profraw
      run: cargo test

    - name: Generate Coverage for Coveralls üìä
      run: |
        grcov . `
          --binary-path ./target/debug/ `
          -s . `
          -t coveralls+ `
          --branch `
          --token ${{ secrets.COVERALLS_TOKEN }} `
          --commit-sha ${{ github.sha }} `
          --service-name github-actions `
          --service-job-id ${{ github.run_id }} `
          --vcs-branch ${{ github.ref_name }} `
          -o coveralls.json `
          --ignore-not-existing `
          --ignore `
          C:/*/.cargo/* `
          --ignore `
          */src/testing/* `
          --ignore `
          */tests/* `
          --ignore `
          bin/src/main.rs `
          --ignore `
          */build.rs `
          --ignore `
          lib/src/displays_settings/windows/win_32/windows_api_based_win_32.rs `
          --ignore `
          lib/src/speakers_settings/windows/audio_endpoint_library/dll_based_audio_endpoint_library.rs `
          --excl-line "^\s*#\[cfg\(test\)\]" `
          --excl-start "^(\s*mod tests \{)|(pub fn configure_logger\()|(impl From<ConfigErrors> for ApplicationError \{)|(impl From<SetLoggerError> for ApplicationError \{)" `
          --excl-stop "^\}"

    - name: Upload Coverage to Coveralls ‚¨ÜÔ∏è
      run: curl -F 'json_file=@coveralls.json' https://coveralls.io/api/v1/jobs